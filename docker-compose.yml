version: '3.6'
services:
  Elasticsearch:
    # image: elasticsearch:7.16.2
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}"
    container_name: elasticsearch
    hostname: elasticsearch
    restart: always
    environment:
      - cluster.name=es-cluster
      - node.name=es-node-1
      - path.data=/usr/share/elasticsearch/data
      - http.port=9200
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms${ES_JVM_HEAP} -Xmx${ES_JVM_HEAP}"
      # ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      - discovery.type: single-node
    mem_limit: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1 
    volumes:
      - elastic_data:/usr/share/elasticsearch/data/
    ports:
    - '9200:9200'
    - '9300:9300'
    networks:
      - elk
    # Health check to confirm availability of ES. Other containers wait on this.
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "-u", "elastic:${ES_PASSWORD}", "http://localhost:9200/_cat/health"]

  Logstash:
    image: logstash:7.16.2
    container_name: logstash
    restart: always
    volumes:
    - ./logstash/:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf 
    depends_on:
      - Elasticsearch
    ports:
    - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"    
    networks:
      - elk

  Kibana:
    # image: kibana:7.16.2
    image: "docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}"
    container_name: kibana
    hostname: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - "ELASTICSEARCH_PASSWORD=${ES_PASSWORD}"
      - server.port=127.0.0.1:5601
      # - elasticsearch.url="http://elasticsearch:9200"
      - server.name="kibana"
    restart: always       
    ports:
    - '5601:5601'
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/login"]
      retries: 6
    networks:
      - elk
    depends_on:
      - Elasticsearch
      - Kibana  
    
# Configure Stack container. This container configures the stack after Kibana and Elasticsearch have been deployed.
configure_stack:
container_name: configure_stack
image: docker.elastic.co/beats/metricbeat:${ELASTIC_VERSION}
environment:
- 'ELASTIC_VERSION=${ELASTIC_VERSION}'
- 'ES_PASSWORD=${ES_PASSWORD}'
- 'ES_DEFAULT_INDEX_PATTERN=${ES_DEFAULT_INDEX_PATTERN}'
volumes:
- './init/configure-stack.sh:/usr/local/bin/configure-stack.sh:ro'
command: ['/bin/bash', '-c', 'cat /usr/local/bin/configure-stack.sh | tr -d "\r" | bash']
networks:
- 'elk'
depends_on:
  - Elasticsearch
  - Kibana
# volumes:
#   elastic_data: {}

# networks:
#   elk:
networks:
  elk:
      driver: bridge
      ipam:
        driver: default
        config:
        # default docker compose subnet(172.177.0.0/16), which may overlap with existing services on home network.
        # use this configuration to update to a different subnet
        - subnet: 192.168.1.0/24
